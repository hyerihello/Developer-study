**
NULL 값
- 한 행의 특정 열에 데이터 값이 없으면 널이라고한다.
- 널 값은 알수없는 값으로 0또는 공백과 다르다.
- 널 값을 포함하는 연산의 경우 결과도 널이다.
- 모르는 데이터에 숫자를 더하거나 빼도 결과는 모르는 데이터 인것과 같다.
- 숫자를 0으로 나누면 오류가 발생하지만 널로나눔녀 결과는 널이다.
============================
연결문자, 중복제거, 널값처리, 산술연산, 별칭
=============================
Literal 문자열
- 열이름 열별칭이 아니면서 SELECT 목록에 포함된 문자, 숫자, 또는  날짜 이며
각 행이 반환 될때마다 출력된다.
- 텍스트 리터럴 문자열은 질의 결과(SQL 구문)에 포함되어 SELECT 목록의 열과 동일하게 취급된다.
- 날짜 및 문자 리터럴은 반드시 작은 따옴표 ('') 로 묶어야 하지만 숫자 리터럴은 작은 따옴표로
묶지 않는다.
============================
Pseudo Column (의사 열) : query가 가능한열
- rownum을 이용하여 검색된 로우의 수를 검색할 수 있다.
- rownum은 각 검색된 행의 일련변호로써 , order by 에 의한 정렬 이전에 부여된다.
- rowid는 테이블 내의 특정한 행을 유일하게 구별해 주는 값으로 데이터 타입은 ROWID이다.
- row

[4]
SELECT 컬럼 [AS] 별칭 , , ,
FROM 테이블명 별칭 , , , ;
WHERE condition(s)

- 검색 결과에 대한 제한을 둘때 사용
- where 은 from 절 뒤에 온다.
- 문자열과 날짜 값은 작은 따옴표로 묶어서 표시
- where 절은 생략 가능하고 생략할 경우 모든 행이 검색됨
- where 조건식의 결과가 TRUE 인 ROW만 선택한다.
- where 절은 별칭은 사용할 수 없다.
- 테이블의 데이터를 추출하는 필터 역할은 한다.
- 조인시 테이블들을 연결하는 조건으로 사용된다.
- 산술연산, 비교연산, 컬럼, 숫자, 문자상수, like, in, between, is null, is not null
함수, 논리연산자, any, all => 조건식의 표현식
==========================================
Q1) 사원테이블에서 사원의 이름이 FORD인 정보를 출력하자.
    SELECT *
    FROM EMP
    WHERE ENAME = 'FORD'; #VALUE는 대소문자를 가린다.

Q2) 사원테이블에서 직업이 매니저인 사원의 번호, 이름, 직업 급여를 리턴하자.
SQL> SELECT EMPNO, ENAME, JOP, SAL
  2  FROM EMP
  3  WHERE JOB = 'MANAGER';
SELECT EMPNO, ENAME, JOP, SAL

Q3) 사원테이블에서 급여가 3000이상인 사원의 번호, 이름, 직업, 급여를 조회하자.
SQL> SELECT EMPNO, ENAME, JOB, SAL
  2  FROM EMP
  3  WHERE SAL >= 3000;

Q4) 사원테이블에서 급여가 1300에서 1700사이에 해당되는 사원의 이름, 직업, 급여 부서번호를 출력하자.
SQL> SELECT ENAME, JOB, SAL, DEPTNO
  2  FROM EMP
  3  WHERE SAL BETWEEN 1300 AND 1700;

EX) BETWEEN 하한값(a) AND 상한값(b)
- 두 사이의 값을 출력 할 때 사용되면 조건절에 명시된 범위의 값을 리턴한다.
- expr >= a AND expr <= b 와 같다.

EX) NOT BETWEEN 하한값(a) AND 상한값(b)
- expr < a OR expr > b 와 같다.

SQL> SELECT ENAME, JOB, SAL, DEPTNO
  2  FROM EMP
  3  WHERE SAL NOT BETWEEN 1300 AND 1700;

===========================================
Q5) IN(여러 값 중 하나와 일치하는값)
- 여러값 중에 어느 하나와 일치한다.
- IN 은  = ANY와 같다.
- NOT IN 은 != ALL 과 같다.
- 형태는 IN(값1, 값2, 값3) 이며 비교대상이 괄호안의 갑ㅄ에 포함될 경우 조건을 만족하게 된다.
- IN은 비교하는 값이 하나이더라도 ( ) 와 같이 사용하며, 여러형태의 데이터 타입 모두 비교가능하다.

사원테이블에서 사원번호가 7902, 7788, 7566인 사원의 사번, 이름, 급여, 입사일을 출력하자.
SQL> SELECT EMPNO, ENAME, SAL, HIREDATE
  2  FROM EMP
  3  WHERE EMPNO IN(7902, 7788, 7566);

Q6) LIKE 연산자.(문자의 패턴이 일치하는 값)
- %: 임의의 길이 문자열(공백 문자 가능), 0개 또는 1개 이상의 문자와 대응
- _; 한글자.
- ESCAPE : 검색할 문자에 % _ 문자를 포함할 때

사원의 이름중 D자로 끝나는 사원을 출력해보자.
SQL> SELECT ENAME
  2  FROM EMP
  3  WHERE ENAME LIKE'%D';

사원의 이름중 W로 시작하되 _ _ 건너뛰고 D로 끝나는 사원
  SQL> SELECT ENAME
  2  FROM EMP
  3  WHERE ENAME LIKE 'W__%D';

칼럼, VALUE 생성 및 삭제
CREATE TABLE TEST(NAME VARCHAR2(15));
DROP TABLE TEST;

INSERT INTO TEST VALUES('22222');
 DELETE FROM TEST;

 두번째 글자가 %인 이름을 출력하고싶다.
 이름에 _문자가 들어있는 이름을 출력하고 싶다.
 > SELECT*
  2  FROM TEST WHERE NAME LIKE '%#_%' ESCAPE '#';
  ** #, ! 다 사용할 수 있다.

Q7) 사원테이블에서 커미션이 NULL인 사원을 조회하자. (책정되지 않는)
  SELECT *
  FROM EMP
  WHERE COMM IS NULL;

============================================
 함수 : 단일행(문자함수, 숫자함수, 날짜함수, 변환함수, 기타함수), 다중행
 문자함수 : UPPER, LOWER, INITCAP(단어의 첫문자는 대문자 나머지 소문자), CONCAT(결합), SUBSTR
           INSTR(특정문자열의 위치를 숫자로 리턴), LENGTH, CHR, ASCII

Q8) 사원테이블에서 SCOTT의 사원번호, 성명, 직업, 부서번호를 출력하되 모두 소문자로 출력하자.
SQL> SELECT EMPNO, LOWER(ENAME), LOWER(JOB), DEPTNO
  2  FROM EMP
  3  WHERE ENAME ='SCOTT';

Q9) DEPT 테이블에서 컬럼의 첫글자만 대문자로 변환하여 모든정보를 출력하자.
SQL> SELECT DEPTNO, INITCAP(DNAME), INITCAP(LOC)
  2  FROM DEPT;

Q10) SELECT EMPNO, ENAME, CONCAT(EMPNO,ENAME) ENAME
FROM EMP
WHERE DEPTNO = 10;

Q11) 사원테이블에서 이름의 첫 글자가 K보다 크고 Y보다 작은 사원의 정보를 출력하되 이름순으로 정렬해보자. SUBSTR()
SQL> SELECT *
  2  FROM EMP
  3  WHERE SUBSTR(ENAME,1,1) > 'K'AND SUBSTR(ENAME,1,1)< 'Y'
  4  ORDER BY ENAME;

** 컬럼폭조절 숫자
COLUMN COMM FORMAT 9999
** 컬럼폭 조절 문자
COLUMN ENAME FORMAT A10

** LTRIM 왼쪽 삭제

Q12)
 SELECT ENAME, IPAD(ENAME,15,'*'), SAL, IPAD(SAL,10, '*')
  2  FROM EMP
  3  WHERE DEPTNO=10;

Q13)EMP 테이블에서 10번 부서의 사원에 대하여 담당 업무중 좌측에 'A'를 삭제하고 급여중 좌측의 1을 삭제하여 출력하여라.
LTRIM 사용

SQL> SELECT ENAME, JOB, LTRIM(JOB,'A'),SAL, LTRIM(SAL,1)
  2  FROM EMP;

Q14) EMP 테이블에서 10번 부서의 사원에 대하여 담당 업무중 우측에 'T'를 삭제하고 급여중 우측의 0을 삭제하여 출력하여라
RTRIM 사용

  SELECT ENAME, JOB, RTRIM(JOB,'T'), SAL, RTRIM(SAL,0)
  2  FROM EMP
  3  WHERE DETPNO = 10;

Q15) REPLACE, 함수를 이용해서 사원 이름에 SC문자열을 *?로 변경해서 조회
SELECT ENAME, REPLACE(ENAME, 'SC', '*?') 결과
  2  FROM EMP ;

Q16) TRANSLATE 함수를 하용해서 사원이름에 SC문자열을 *?로 변경해서 조회
SELECT ENAME, TRANSLATE(ENAME, 'SC', '*?') 결과
  2  FROM EMP;

 ==============================================
 숫자함수
 ROUND : 반올림
 TRUNK : 버림
 MOD(M,N) : M을 N으로 나눈 나머지
 ABS : 숫자값을 절대값으로
 FLOOR : 해당 수보다 작거나 같은 정수 중 큰 정수갑을 리턴 (반내림)
 CEIL : 해당 수보다 크거나 같은 정수중 가장 작은 정수 값을 리턴
 SIGN : 1, -1, 0 (양수, 음수, 0)
 POWER(M,N) : M의 N승

 Q17) ROUND
 SQL> SELECT ROUND(456.678) RES1, ROUND(456.678,0) RES2, ROUND(456.678,2) RES3, ROUND(456.678,-2) RES4
  2  FROM DUAL;

 Q18) TRUNC
 SET NUM 7
 SQL> SELECT TRUNC(456.678) RES1, TRUNC(456.678,0) RES2, TRUNC(456.678,2) RES3, TRUNC(456.678,-2) RES4
  2  FROM DUAL;
===================================================================
날짜데이터
- CENTURY, YEAR, MONTH, DAY, HOURS, MINUTES, SECONDS = 7BYTE
- 기본 date format : 'RR/MM/DD', 'DD-MON-RR'
    RR = Y2K 고려해서 년도를 표기한 것 (00~49 : 2000년대, / 50~99:1900년대)
    81/09/28

 EX) 2011년 6월 7일 오전3시15분 47초 -> 07-JUN-11
  CENTURY, YEAR, MONTH, DAY, HOURS, MINUTES, SECOND
    20      11      06  07      3   15      47
- DATE + NUMBER : 날짜에 해당 일수를 더한 결과를 리턴, 날짜형태로 표시
- DATE - NUMBER : 날짜에 해당 일수를 뺀 결과를 리턴, 날짜 형태로 표시
- DATE1 - DATE2 : 두 날짜 사이의 경과 일수 나타냄, 숫자로 표시
- DATE + NUMBER/24 : 날짜에 해당 시간을 더해서 리턴. 날짜 형태로 리턴


EX) 입사일이 81년도 9월9일 이후에 입사한 사원을 출력해보자.
  SQL> SELECT ENAME, HIREDATE
  2  FROM EMP
  3  WHERE HIREDATE >='81/09/09';

  SQL> SELECT ENAME, HIREDATE
  2  FROM EMP
  3  WHERE HIREDATE >='81-09-09';

  SQL> SELECT ENAME, HIREDATE
  2  FROM EMP
  3  WHERE HIREDATE >='1981-09-09';

 - SYSDATE: 7BYTE를 가지고 있지만 리턴되는것은 YY/MM/DD형식이다.
 SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD-HH:MM') FROM DUAL;

 - SYSTIMESTAMP : TIMESTAMP WITH TIME ZONE. 형식의 시스템 날짜를 리턴한다.
 SELECT SYSTIMESTAMP FROM DUAL;

 - CURRENT_DATE : 현재 SESSION 의 날짜 정보를 일/월/년도 24시 : 분: 초 리턴
 - CURRENT_TIMESTAMP : TIMESTAMP WITH TIME ZONE 형식으로
        CURRENT_DATE SESSION TIME ZONE형식으로 리턴
 - EXTRACT : DATETIME 또는 INTERVAL의 값 표현 형식에 지정된 DATETIME 필드의 값을 추출해서 리턴한다.

   EX) 오늘날짜에서 년도만 출력하고 싶다.
        SELECT EXTRACT (YEAR FROM SYSDATE) FROM DUAL;
       사원테이블에서 사원의 이름, 입사일자에서 입사한 월 정보만 조회하자.
       SELECT ENAME, EXTRACT (MONTH FROM HIREDATE) FROM EMP;
       SELECT ENAME, EXTRACT(DAY FROM HIREDATE) FROM EMP;

 - MONTHS_BETWEEN(D1,D2); 두 날짜간의 경과를 개월 수
 - ADD_MONTHS(D1,N) : D1날짜에 N개월을 더함
 - NEXT_DAT(D1,'CHAR'): D1보다 이후 날짜이고 'CHAR'에 지정한 요일에 해당하는 날짜
 - LAST_DAY : 해당월의 마지막 날짜를 리턴한다.


Q19) 아래 결과와 같이 테이블에서 현재 까지 근무일수가 몇주 며칠인지 조회한다.
SELECT ENAME, HIREDATE, SYSDATE,
FROM EMP
ORDER BY 4 DESC;

SELECT ENAME, HIREDATE, SYSDATE,
  2  SYSDATE-HIREDATE AS "TOTAL DAYS",TRUNC((SYSDATE-HIREDATE)/7,0)AS WEEKS, ROUND(MOD((SYSDATE-HIREDATE),7),) DAYS
  3  FROM EMP
  4  ORDER BY 4 DESC;

Q20) 사원테이블에서 10번 부서의 사원의 현재까지의 근무 월 수를 계산해서 리턴받자. (MONTHDEDTAIL)
SQL> SELECT ENAME, HIREDATE, SYSDATE, MONTHS_BETWEEN(SYSDATE,HIREDATE) AS M_BETWEEN, TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE),0) AS T_BETWEEN
  2  FROM EMP
  3  WHERE DEPTNO=10
  4  ORDER BY 4 DESC;

Q21) 사원테이블에서 10번 부서사원의 입사일로 부터 5개월이 지난 날짜를 계산하여 출력하자.
SELECT ENAME, HIREDATE, ADD_MONTHS(HIREDATE,5)A_MONTH
FROM EMP
WHERE DEPTNO = 10
ORDER BY HIREDATE DESC;

Q22) 사원 테이블에서 10번 부서 사원의 입사일로부터 돌아오는 금요일을 계산해보자.
SQL> SELECT ENAME, HIREDATE, NEXT_DAY(HIREDATE, 6)
  2  FROM EMP
  3  WHERE DEPTNO = 10
  4  ORDER BY HIREDATE DESC;
==================================================================
ROUND : 일은 반올림할 때 정오를 넘으면 (PM) 다음날 자정을 출력하고,
        넘지 않으면 그날 자정을 출력한다.

        월을 반올림 할 경우 15일 이상이면 다음달 1일을 출력하고
        넘지 않으면 현재 달 1일을 출력한다.

        년도를 반올림하는 경우에는 6월을 넘으면 다음해 1월 1일을 출력하고
        넘지 않으면 그 해 1월1일을 출력한다.

TRUNC : 일은 절삭 할 때 그날 자정을 출력하고, 월을 절삭하면 그 달의 1일을 출력한다.
        년도를 절삭하면 그 해 1월 1일을 출력한다.
        단, 주의할 점은 시간 정보가 중요하지 않을경우 시간 정보를 생략하고 입력하거나
        연산할 때 편리하다.


        월을 반올림 할 경우 15일 이상이면 다음달 1일을 출력하고
        넘지 않으면 현재 달 1일을 출력한다.

        년도를 반올림하는 경우에는 6월을 넘으면 다음해 1월 1일을 출력하고
        넘지 않으면 그 해 1월1일을 출력한다.
================================================
TO_CHAR
    숫자 FORMAT :
    숫자(9,0), 그룹 구분자(,),G, 소수점, 통화 $ L ,
    공백제거 FM, 표기법 EEEE(지수), RN(로마표기자), rn, X(16진수표기),
    기호표시 MI: 숫자가 음수일 경우에 마지막에 - ,
            PR: 음수인 경우 <>안에 숫자표시 ,
            S : 음수인 경우 숫자앞에 -

            숫자(9,0)
            SQL> SELECT TO_CHAR(1000, '9999') FROM DUAL;
            SQL> SELECT TO_CHAR(1000,'00009999') FROM DUAL;
            SQL> SELECT TO_CHAR('1000','00009999') FROM DUAL;
            SELECT TO_CHAR(12.3, '009.90') FROM DUAL;

            그룹구분자
            SELECT TO_CHAR(12345,'99.999.9') AS RES FROM DUAL;

날짜 FORMAT :
    기원 : AD/BC, A.D./B.C.
    년도 : YYYY(2021),YYY(021),YY(21),Y(1),YEAR,SYYYY(BC인 경우 음수로 표시),PR
    분기 : Q (4분기)
    월 : MM(1~12), MON(월이름약어 JAN,FEB), MONTH(January), RM (로마식)
    주 : W(1,2,3,4,5주표시), WW(년 주표시:1월1일 - 1월7일까지가 1주차가된다.),
            IW (IOS주표시 : 1월1일부터 첫번째 일요일까지가 1주차가된다.)
    일자 : D, DD, DDD, J(BC4712 이후의 줄리안력 일자.)
    요일 : DY(MON), DAY(Monday)

시간 FORMAT:
    오전/오후 : AM/PM, A.M./P.M.
    시간 : HH, HH12, HH24
    분 : MI
    초 : SS, SSSS
    시간대 : TZD(서머타임), TZH, TZM, TZR(US/Central)
    기타 : ../;
    P 73~169 복습하기