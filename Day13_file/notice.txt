1. os 모듈 내용을 살펴보고 운영체제의 값을 구현하는 클래스와 메소드를 활용할 수 있다.
2. 파일의 입 출력을 구현할 수 있다.
================================================
팀별플젝 : python GUI application -> 웹 수집기 -> 파일처리
================================================
운영체제에서 제공되는 기본적인 기능들을 제공하는 메소드
os.getcwd(): 현재 작업하고 있는 디렉토리를 반환하겠다.
os.chdir(path):디렉토리 변경
os.access(path,mode):F.OK(false), R_OK(읽기전용), W_OK(쓰기전용), X_OK(실행가능여부)
os.listdir()
os.mkdir()/mkdirs()
os.remove()
os.unlink()d
os.rmdir():비어있는 디렉토리삭제
os.removedirs(): 경로를 서브디렉터리로 부터 재귀적으로 삭제
os.rename(old,new)
os.stat((path, *, dir_fd=None, follow_symlinks=True):path에 대한 정보를 리턴한다.
os.utime() :엑세스 수정시간등
os.walk(top, topdown=True, onerror=None, followlinks=False):
    Top으로 지정한 디렉토리를 순화하면서 경로 또는 디렉토리 명을 순차적으로 변환
===================================
 파일처리
  1.byte = 이미지, 동영상, 음성
  2.문자처리 = txt
  3.object처리 = 동일한 패턴, 자주사용하는 패턴 -> class -> 객체생성 -> 입,출력

[형식]
    파일객체 = open(file,mode)
    open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
   ex) open("a.txt") #텍스트 읽기모드 rt
       open("a.txt" , 'w') # 쓰기전용
       open('apple.bmp', 'r+b') #바이너리 읽기,쓰기 모드
       open('a.txt', encoding='utf-8')

      open() -> write()/read() -> close()



      os 모듈 안에 os.file, sys, time,